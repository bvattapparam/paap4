/**
 * @fileOverview textInput styles.
 * @name textInput.less
 * @tested ?
 */
 @import "mix";
 @import "theme";

.fieldLabel {
	display: none;
}

.fieldWrapper {
  position: relative;
  z-index: 2;
  width: 100%;
}

.errorMessage {
background: none repeat scroll 0 0 padding-box #efcaca;
  position: relative;
  top: -35px;
  left: 0;
  z-index: 1;
  width: 100%;
  padding: 5px 10px;
  margin:5px 0 0;
  border-radius:5px;
  border:1px solid #d9534f;
  font-size: 12px;
  //height: 0;
  color: #000;
 transition: all .3s ease-out;
  opacity:0;
 overflow:hidden;
}

/*.errorMessage p {
  margin: 0;
  color: #fff;
}
*/
.errorMessage.show {
overflow:visible;
opacity:1;
left:0;
  top: 1px;
  height: auto;
  border-radius:5px;
  text-align: left;
  margin-bottom:5px;
}
.errorMessage.caret:before {
    border-color: transparent transparent #d9534f;
    border-style: dashed solid;
    border-width: 7px;
    content: "";
    left: 10px;
    position: absolute;
    top: -15px;
    z-index: 1;
}
.errorMessage.caret:after {
    border-color: transparent transparent #efcaca;
    border-style: dashed solid;
    border-width: 7px;
    content: "";
    left: 10px;
    position: absolute;
    top: -13px;
    z-index: 2;
}

.textInput {
	position: relative;
  min-height: 45px;
  margin: 0 0 15px 0;

  &.hasError input {
    border: 1px solid @errorBgColor;
    background-image: url(../images/sprite/sprite_form_2x.png);
    background-position: top -409px right 10px;
    background-size: 25px;
    background-repeat: no-repeat;
  }

  input,
  textarea {
    height: 44px;
    width: 100%;
    padding: 0 24px 0 12px;
    border: 1px solid @inputBorderColor;
    outline: 0;
    background: @white;
    text-overflow: ellipsis;
    .box-sizing();
    .border-radius();
  
    color: @black;
    font-size: 16px;
    .helvetica();
    font-weight: normal;

    &:focus {
      .themedInputFocus();
      background-color: @white;
    }
  }

  textarea {
    padding-top: 12px;
    padding-right: 0;
    height: 100%;

    overflow: auto;
  }

  input:not([type=submit]):not([type=radio]):not([type=checkbox]) {
    .background-clip();
    .transition-double(border .2s ease-in-out, background-color .2s ease-in-out);
  }

  .tickmark {
    .imageLoader(@formSprite, 25px);
  }

  .tickmark {
    width: 35px;
    height: 35px;
    margin-top: 2px;

    right: 5px;
    float: right;
    position: absolute;
    z-index: 3;

    text-align: center;
    cursor: pointer;
    background-position: 0 69%;
  }
}
/* LAP - large */
.js .lap .textInput,
.js div.lap.textInput {
  padding: 0;

  position: relative;
}

.js .lap .textInput label,
.js div.lap.textInput label {
  position: absolute;
  left: 12px;
  z-index: 1;

  color: @gray40;
  cursor: text;
}

.js .lap .textInput label.focus,
.js div.lap.textInput label.focus,
.js div.lap.textInput label.focus span.optional,
.js .lap .textInput label.focus span.optional {
  color: #b3b3b3;
}
/* LAP - medium */
.js .lap .textInput.medium,
.js div.lap.textInput.medium {
  padding: 0;

  position: relative;
}

.js .lap .textInput.medium label.focus,
.js .formMedium div.lap.textInput.medium label.focus {
  color: #b3b3b3;
}

.js .lap .textInput.medium label,
.js div.lap.textInput.medium label {
  position: absolute;
  left: 12px;
  z-index: 1;

  color: @gray40;
}

.groupFields {
  clear: both;

  .textInput {
    width: 48.9%;
    float: left;

    input {
      width: 100%;
    }
  }

  .left,
  .middle {
    margin-right: 10px;
  }

  .multi {
    .left {
      width: 72.5%;

      float: left;
    }

    .right {
      width: 25%;

      float: left;
    }

    &.equal {
      .left,
      .right {
        width: 48.6%;
      }
    }
  }

  .reverse {
    .right {
      width: 72.3%;
    }

    .left {
      width: 25%;
    }
  }

  .multiple {
    .left {
      width: 48.8%;

      float: left;
    }

    .right {
      width: 25%;

      float: left;
    }

    .middle {
      width: 21.4%;

      float: left;
    }

    &.equal {
      .left,
      .right,
      .middle {
        width: 31.8%;
      }
    }
  }

  .large {
    width: 100%;
  }
}

.groupReatedFields {
  .left {
    width: 27%;

    float: left;
  }

  .right {
    width: 73%;

    float: left;
  }

  .selectDropdown {
    border-right: 0;
    border-top-right-radius: 0;
    border-bottom-right-radius: 0;
  }

  .textInput input {
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
  }
}

/** IPAD STYLING **/
@media all and (min-width: 768px) and (max-width: 1024px) {
  .groupFields {
    .multi {
      &.equal {
        .left,
        .right {
          width: 48.4%;
        }
      }
    }
  }
}

@media all and (min-width: 768px) and (max-width: 1024px) and (orientation: portrait) {
  .groupFields .multi.equal .left,
  .groupFields .multi.equal .right {
    width: 48.2%;
  }
}

@media all and (max-width: 538px) {
  .groupFields,
  .groupFields .multi,
  .groupFields .multiple {
    .textInput,
    .selectDropdown {
      width: 100%;
    }
  }
}

/* mobile ---- */
@media all and (max-width: 767px) {
  .groupFields {
    .multi {
      &.equal {
        .left,
        .right {
          width: 48.2%;
        }
      }
    }
  }
}

/* android specific */
.android .textInput input:focus {
  -webkit-user-modify: read-write-plaintext-only;
}